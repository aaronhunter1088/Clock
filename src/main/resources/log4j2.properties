# Log Configuration File
# Prints to the Console, an Instance file, and a Master file
name=Clock Logging Configurations
property.folderName=logs
property.masterName=Clock~Master~Logs
property.instanceName=Clock~Instance~Logs
property.separator=::
property.date = ${date:MM}-${date:dd}-${date:yyyy}
property.rollOverDaily = %d{MM-dd-yyyy}
#property.rollOverHourly = %d{MM-dd-yyyy_hh}
#property.rollOverMinutely = %d{MM-dd-yyyy_hh-mm}
property.patternWithColor= %highlight{%-6level}{FATAL=bg_red, ERROR=bg_red, WARN=yellow, INFO=green, DEBUG=cyan} %d{MM-dd-yyyy hh:mm:ss.SSS a} [%c:%M:%L] ${separator} %msg%n
property.patternNoColor= %-6level %d{MM-dd-yyyy hh:mm:ss.SSS a} [%c:%M:%L] ${separator} %msg%n

# Appenders are responsible for writing the LogEvents to its target destination
# Appenders always have a name so that they can be referenced from Loggers.
# https://logging.apache.org/log4j/2.x/manual/appenders.html
appenders = console, master, instance, rollingDaily

#Shows currently running session logs
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${patternWithColor}

#Every run gets printed to this file
appender.master.type= File
appender.master.name= FileMasterOutput
appender.master.fileName= ${folderName}/${masterName}.log
appender.master.layout.type= PatternLayout
appender.master.layout.pattern= ${patternNoColor}
appender.master.layout.footer=%n
appender.master.append= true
appender.master.filter.threshold.type = ThresholdFilter
appender.master.filter.threshold.level = DEBUG

#Every run gets printed to this file, rolls over when full or a new day
appender.instance.type = RollingFile
appender.instance.name = RollingInstanceOutput
appender.instance.fileName = ${folderName}/${date}/${sys:appName:-calculator_nameNotSet}Instance.log
appender.instance.filePattern = ${folderName}/${date}/${sys:appName:-calculator_nameNotSet}Instance.log
appender.instance.layout.type = PatternLayout
appender.instance.layout.pattern = ${patternNoColor}
appender.instance.append= false
appender.instance.layout.footer=%n
appender.instance.filter.threshold.type = ThresholdFilter
appender.instance.filter.threshold.level = INFO
appender.instance.policies.type = Policies
#appender.instance.policies.startup.type = OnStartupTriggeringPolicy
appender.instance.policies.size.type = SizeBasedTriggeringPolicy
appender.instance.policies.size.size= 50MB
appender.instance.strategy.type = DefaultRolloverStrategy
#When the the fileIndex attribute is set to "max" the following actions will be performed.
#During the max(1) rollover foo.log is renamed to foo1.log. A new foo.log file is created and starts being written to.
appender.instance.strategy.max = 1
appender.instance.strategy.action.type = Delete
appender.instance.strategy.action.basepath = ${folderName}
appender.instance.strategy.action.maxdepth = 2
appender.instance.strategy.action.condition.type = IfLastModified
appender.instance.strategy.action.condition.age = 30D

#Every run gets printed to this file, rolls over daily
appender.rollingDaily.type = RollingFile
appender.rollingDaily.name = RollingDailyFileOutput
appender.rollingDaily.fileName = ${folderName}/${date}/${sys:appName:-calculator_nameNotSet}Daily.log
appender.rollingDaily.filePattern = ${folderName}/${date}/${rollOverDaily}/${sys:appName:-calculator_nameNotSet}Daily.log
appender.rollingDaily.layout.type = PatternLayout
appender.rollingDaily.layout.pattern = ${patternNoColor}
appender.rollingDaily.append= true
appender.rollingDaily.layout.footer=%n
appender.rollingDaily.filter.threshold.type = ThresholdFilter
appender.rollingDaily.filter.threshold.level = DEBUG
appender.rollingDaily.policies.type = Policies
appender.rollingDaily.policies.size.type = SizeBasedTriggeringPolicy
appender.rollingDaily.policies.size.size = 50MB
appender.rollingDaily.policies.time.type = TimeBasedTriggeringPolicy
appender.rollingDaily.policies.time.interval = 1
appender.rollingDaily.policies.time.modulate = true

# Configure root logger, Set env:logLevel in run configs
rootLogger.level = ${env:logLevel:-all}
#rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.instance.ref = RollingInstanceOutput
rootLogger.appenderRef.master.ref = FileMasterOutput
rootLogger.appenderRef.rollingDaily.ref = RollingDailyFileOutput